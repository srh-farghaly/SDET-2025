version: 2.1

jobs:
  ui_tests:
    docker:
      - image: cimg/node:18.19-browsers
    steps:
      - checkout

      # ----- LinkedIn (runs with its default env; not forcing Chrome) -----
      - restore_cache:
          keys:
            - v1-npm-linkedin-{{ checksum "linkedin-registration-automation/package-lock.json" }}
            - v1-npm-linkedin-
      - run:
          name: Install deps (linkedin-registration-automation)
          command: |
            cd linkedin-registration-automation
            npm ci --prefer-offline --no-audit --no-fund
      - save_cache:
          key: v1-npm-linkedin-{{ checksum "linkedin-registration-automation/package-lock.json" }}
          paths:
            - ~/.npm
            - linkedin-registration-automation/node_modules
      - run:
          name: Run LinkedIn tests (default env)
          command: |
            cd linkedin-registration-automation
            npm run test

      # ----- MyStore (force Chrome) -----
      - restore_cache:
          keys:
            - v1-npm-mystore-{{ checksum "mystore-Automation/package-lock.json" }}
            - v1-npm-mystore-
      - run:
          name: Install deps (mystore-Automation)
          command: |
            cd mystore-Automation
            npm ci --prefer-offline --no-audit --no-fund
      - save_cache:
          key: v1-npm-mystore-{{ checksum "mystore-Automation/package-lock.json" }}
          paths:
            - ~/.npm
            - mystore-Automation/node_modules
      - run:
          name: Run MyStore tests (Chrome)
          command: |
            cd mystore-Automation
            npx nightwatch --env chrome tests/search-dress.js

      # ----- S3 sample site (force Chrome) -----
      - restore_cache:
          keys:
            - v1-npm-s3-{{ checksum "s3-sample-site-e2e-tests/package-lock.json" }}
            - v1-npm-s3-
      - run:
          name: Install deps (s3-sample-site-e2e-tests)
          command: |
            cd s3-sample-site-e2e-tests
            npm ci --prefer-offline --no-audit --no-fund
      - save_cache:
          key: v1-npm-s3-{{ checksum "s3-sample-site-e2e-tests/package-lock.json" }}
          paths:
            - ~/.npm
            - s3-sample-site-e2e-tests/node_modules
      - run:
          name: Run S3 tests (Chrome)
          command: |
            cd s3-sample-site-e2e-tests
            npx nightwatch --env chrome

      # (Optional) store Nightwatch reports if your projects generate them
      - run:
          name: Ensure artifact dirs exist
          command: |
            mkdir -p linkedin-registration-automation/tests_output
            mkdir -p mystore-Automation/tests_output
            mkdir -p s3-sample-site-e2e-tests/tests_output
      - store_artifacts:
          path: linkedin-registration-automation/tests_output
          destination: ui/linkedin
      - store_artifacts:
          path: mystore-Automation/tests_output
          destination: ui/mystore
      - store_artifacts:
          path: s3-sample-site-e2e-tests/tests_output
          destination: ui/s3

  api_tests:
    docker:
      - image: cimg/node:18.19
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-api-{{ checksum "mock-user-auth-tests/package-lock.json" }}
            - v1-npm-api-
      - run:
          name: Install deps (mock-user-auth-tests)
          command: |
            cd mock-user-auth-tests
            npm ci --prefer-offline --no-audit --no-fund
      - save_cache:
          key: v1-npm-api-{{ checksum "mock-user-auth-tests/package-lock.json" }}
          paths:
            - ~/.np
